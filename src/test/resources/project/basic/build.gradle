import com.energizedwork.gradle.docker.task.CreateContainerTask
import com.energizedwork.gradle.docker.task.DeleteContainerTask
import com.energizedwork.gradle.docker.task.StartContainerTask
import com.energizedwork.gradle.docker.task.StopContainerTask

defaultTasks 'useDSLTask'

String TEST_CONTAINER_NAME = 'docker-gradle-test-container'

buildscript {
    dependencies {
        classpath rootProject
    }
    repositories {
        jcenter()
    }
}

apply plugin: 'groovy'
apply plugin: 'gradle-docker'

docker {
    host {
        url = 'https://spinship:664'
        tls {
            keystore {
                password = 'password'
            }
            truststore {
                password = 'password'
            }
        }
    }

    containers {
        container {
            name    = TEST_CONTAINER_NAME
            before  = 'useDSLTask'
            after   = 'useDSLTask'
            create  = true
            delete  = true
            image   = 'busybox:latest'
            command = ['/bin/sh', '-c', '"while true; do sleep 1; done"']
        }
    }

}

task useDSLTask << {
    assert docker.containers["${TEST_CONTAINER_NAME}"].networkSettings.ip
}

task createNewContainer(type: CreateContainerTask) {
    command  = ['/bin/sh', '-c', '"while true; do sleep 1; done"']
    hostname = TEST_CONTAINER_NAME
    image    = 'busybox:latest'
}

task startNewContainer(type: StartContainerTask, dependsOn: ['createNewContainer']) {
    hostname = TEST_CONTAINER_NAME
}

task stopContainer(type: StopContainerTask) {
    hostname = TEST_CONTAINER_NAME
}

task startAndStopContainer(dependsOn: ['startNewContainer'])
startAndStopContainer.finalizedBy stopContainer

task deleteContainer(type: DeleteContainerTask, dependsOn: ['startAndStopContainer']) {
    hostname = TEST_CONTAINER_NAME
}